#!/bin/bash

# Don't exit on errors when sourcing
set +x

# Base directory of the repository
export RCZ_HOME="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
export RCZ_SCRIPTS="${RCZ_HOME}/scripts"
export RCZ_BIN="${RCZ_HOME}/bin"
export RCZ_CONFIG="${RCZ_HOME}/config"

# Colors for output
export COLOR_RESET='\033[0m'
export COLOR_RED='\033[0;31m'
export COLOR_GREEN='\033[0;32m'
export COLOR_YELLOW='\033[1;33m'
export COLOR_BLUE='\033[0;34m'
export COLOR_PURPLE='\033[0;35m'
export COLOR_CYAN='\033[0;36m'

# Helper functions
log_info() {
    echo -e "${COLOR_GREEN}[INFO]${COLOR_RESET} $1" >&2
}

log_warning() {
    echo -e "${COLOR_YELLOW}[WARN]${COLOR_RESET} $1" >&2
}

log_error() {
    echo -e "${COLOR_RED}[ERROR]${COLOR_RESET} $1" >&2
}

log_debug() {
    if [ "${DEBUG:-0}" = "1" ]; then
        echo -e "${COLOR_BLUE}[DEBUG]${COLOR_RESET} $1" >&2
    fi
}

# Source files safely with better error handling
safe_source() {
    if [ -f "$1" ]; then
        # Use . instead of source for better compatibility
        if ! . "$1"; then
            log_warning "Error sourcing: $1 (file exists: $(if [ -f "$1" ]; then echo "yes"; else echo "no"; fi))"
            log_debug "Sourcing failed for: $1"
        else
            log_debug "Successfully sourced: $1"
        fi
    else
        log_debug "File not found: $1"
    fi
}

# Load environment variables first
safe_source "${RCZ_SCRIPTS}/core/envs.sh"

# Source hello script
safe_source "${RCZ_SCRIPTS}/core/hello.sh"

# Source functions script
safe_source "${RCZ_HOME}/scripts/core/functions.sh"

# Source core scripts
for script in "${RCZ_SCRIPTS}/core"/*.sh; do
    safe_source "$script"
done

# Source help functions
safe_source "${RCZ_SCRIPTS}/core/help_functions.sh"

# Source tool scripts
for script in "${RCZ_SCRIPTS}/tools"/*.sh; do
    safe_source "$script"
done

# Source cloud scripts
for script in "${RCZ_SCRIPTS}/cloud"/*.sh; do
    safe_source "$script"
done

# Source gitlab scripts
for script in "${RCZ_SCRIPTS}/gitlab"/*.sh; do
    safe_source "$script"
done

# Add bin directory to PATH if not already there
if [[ ":$PATH:" != *":${RCZ_BIN}:"* ]]; then
    export PATH="${RCZ_BIN}:${PATH}"
fi

# Print welcome message if interactive
if [ -t 0 ]; then
    log_info "RCZ environment loaded successfully!"
    log_info "Type 'rcz_help' for available commands"
fi

# Export functions one by one instead of all at once
if [ -n "$BASH_VERSION" ]; then
    export -f log_info
    export -f log_warning
    export -f log_error
    export -f log_debug
    export -f safe_source
fi

# Re-enable error checking if needed
if [[ "${RCZ_STRICT:-0}" == "1" ]]; then
    set -e
fi
