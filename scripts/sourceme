#!/bin/bash

set -euo pipefail

# Base directories
export DEV_HOME="${HOME}/dev"
export TOOLS_DIR="${DEV_HOME}/tools"
export CONFIG_DIR="${HOME}/.config/dev-bootstrap"
export BIN_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")/../bin" && pwd)"

# Create necessary directories
mkdir -p "${DEV_HOME}" "${TOOLS_DIR}" "${CONFIG_DIR}"

# Path configuration
export PATH="${TOOLS_DIR}/bin:${BIN_DIR}:${PATH}"

# Environment settings
export EDITOR="${EDITOR:-vim}"
export VISUAL="${VISUAL:-$EDITOR}"
export LANG="${LANG:-en_US.UTF-8}"
export LC_ALL="${LC_ALL:-en_US.UTF-8}"
export DEVELOPMENT_ENV="${DEVELOPMENT_ENV:-development}"

# Colors for output
export COLOR_RESET='\033[0m'
export COLOR_RED='\033[0;31m'
export COLOR_GREEN='\033[0;32m'
export COLOR_YELLOW='\033[1;33m'
export COLOR_BLUE='\033[0;34m'

# Helper functions
log_info() {
    echo -e "${COLOR_GREEN}[INFO]${COLOR_RESET} $1" >&2
}

log_warning() {
    echo -e "${COLOR_YELLOW}[WARN]${COLOR_RESET} $1" >&2
}

log_error() {
    echo -e "${COLOR_RED}[ERROR]${COLOR_RESET} $1" >&2
}

log_debug() {
    if [ "${DEBUG:-0}" = "1" ]; then
        echo -e "${COLOR_BLUE}[DEBUG]${COLOR_RESET} $1" >&2
    fi
}

# Check if running interactively
if [ -t 0 ]; then
    # Print environment info
    log_info "Development environment configured:"
    log_info "DEV_HOME: ${DEV_HOME}"
    log_info "TOOLS_DIR: ${TOOLS_DIR}"
    log_info "CONFIG_DIR: ${CONFIG_DIR}"
fi

# Export functions
export -f log_info log_warning log_error log_debug